<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.studyboot.sms.dao.StudyDao">

	<resultMap type="study" id="studyMap">
		<id column="std_id" property="no" />
		<result column="name" property="name" />
		<result column="adr_lms" property="address" />
		<result column="cls_lms" property="cls" />
		<result column="goal" property="goal" />
		<result column="photo" property="photo" />
		<result column="day" property="day" />
		<result column="sdt" property="startDate" />
		<result column="edt" property="endDate" />
		<result column="rcrtm_state" property="state" />
		<result column="rcrtm_apply" property="recruitApply" />
		<result column="cont" property="contents" />
		<result column="prsn" property="personnel" />
		<result column="rate" property="rate" />
		<result column="cls_name" property="clsName" />
	</resultMap>

	<!-- 스터디 리스트 통합 -->
	<select id="findAll" resultMap="studyMap" parameterType="map">
		select
		std_id,
		name,
		adr_lms,
		cls_lms,
		rate,
		photo,
		rcrtm_apply,
		goal
		from
		sms_std
		<where>
			rate >= #{rateValue}
			<if test="clsNoSize != 0">
				and
				<if test="clsNoSize == 2">
					LEFT(cls_lms, 2) = #{clsNo}
				</if>
				<if test="clsNoSize == 4">
					LEFT(cls_lms, 4) = #{clsNo}
				</if>
				<if test="clsNoSize == 6">
					cls_lms = #{clsNo}
				</if>
			</if>
			
			 <if test="dayNoListSize > 0">
        and (
        <foreach collection="dayNoList" item="d"
          separator="or">
          day = #{d}
        </foreach>
        )
      </if>

			<if test="addressNoSize != 0">
				and
				<if test="addressNoSize == 2">
					LEFT(adr_lms,2) = #{addressNo}
				</if>
				<if test="addressNoSize == 4">
					LEFT(adr_lms,4) = #{addressNo}
				</if>
				<if test="addressNoSize == 6">
					adr_lms = #{addressNo}
				</if>
			</if>

			<if test="keyword != null">
				<bind name="pattern1" value="'%' + keyword + '%'" />
				and (
				name like #{pattern1}
				or goal like #{pattern1}
				or cont like
				#{pattern1}
				<if test="findedClsNosByKeyword != null">
					or
					<foreach collection="findedClsNosByKeyword" item="k"
						separator="or">
						cls_lms = #{k}
					</foreach>
				</if>
				)
			</if>
		</where>
		order by
		std_id desc
		<if test="size != null and rowNo != null">
			limit #{rowNo}, #{size}
		</if>
	</select>

	<select id="findAllByKeyword" resultMap="studyMap"
		parameterType="map">
		select
		std_id,
		name,
		adr_lms,
		cls_lms,
		rate,
		photo,
		rcrtm_apply,
		goal
		from
		sms_std
		<where>
			rate >= #{rateValue}
			<if test="clsNo != null">
				and (
				<foreach collection="clsNo" item="c" separator="or">
					IF (
					LENGTH(#{c}) = 2, LEFT(cls_lms,2) = #{c}, LEFT(cls_lms,4) =
					#{c})
				</foreach>
				)
			</if>
			
			 <if test="dayNoListSize > 0">
        and (
        <foreach collection="dayNoList" item="d"
          separator="or">
          day = #{d}
        </foreach>
        )
      </if>

			<if test="addressNoSize != 0">
				and
				<if test="addressNoSize == 2">
					LEFT(adr_lms,2) = #{addressNo}
				</if>
				<if test="addressNoSize == 4">
					LEFT(adr_lms,4) = #{addressNo}
				</if>
				<if test="addressNoSize == 6">
					adr_lms = #{addressNo}
				</if>
			</if>

			<if test="keyword != null">
				<bind name="pattern1" value="'%' + keyword + '%'" />
				and (
				name like #{pattern1}
				or goal like #{pattern1}
				or cont like
				#{pattern1}
				<if test="findedClsNosByKeyword != null">
					or
					<foreach collection="findedClsNosByKeyword" item="k"
						separator="or">
						cls_lms = #{k}
					</foreach>
				</if>
				)
			</if>

		</where>
		order by
		std_id desc
		<if test="size != null and rowNo != null">
			limit #{rowNo}, #{size}
		</if>
	</select>




	<select id="findByNo" resultMap="studyMap" parameterType="int">
		select
		std_id,
		adr_lms,
		cls_lms,
		name,
		photo,
		day,
		sdt,
		edt,
		rcrtm_state,
		goal,
		cont,
		prsn,
		rate
		from
		sms_std
		where
		std_id = #{value}
	</select>

	<select id="findByNos" resultMap="studyMap" parameterType="list">
		select
		std_id,
		adr_lms,
		cls_lms,
		name,
		photo,
		day,
		sdt,
		edt,
		rcrtm_state,
		goal,
		cont,
		prsn,
		rate
		from
		sms_std
		where
		<foreach collection="list" item="k" separator="or">
			std_id = #{k}
		</foreach>
	</select>

	<!-- <update id="increaseCount" parameterType="int"> update sms_std set 
		vw_cnt = vw_cnt + 1 where std_id = #{value} </update> -->

	<insert id="insert" parameterType="study"
	useGeneratedKeys="true" keyColumn="std_id" keyProperty="no">
		insert into sms_std(
		name,
		adr_lms,
		cls_lms,
		goal,
		photo,
		day,
		sdt,
		edt,
		cont,
		prsn,
		rate)
		values(
		#{name},
		#{address},
		#{cls},
		#{goal},
		#{photo},
		#{day},
		#{startDate},
		#{endDate},
		#{contents},
		#{personnel},
		0)
		<!-- rate 컬럼에 0 말고 생성하는 스터디장의 평점을 넣어준다. -->
	</insert>

	<update id="update" parameterType="study">
		update sms_std
		set
		name =
		#{name},
		adr_lms = #{address},
		cls_lms = #{cls},
		goal = #{goal},
		photo =
		#{photo},
		day = #{day},
		sdt = #{startDate},
		edt = #{endDate},
		cont =
		#{contents},
		prsn = #{personnel},
		rate = #{rate}
		where std_id = #{no}
	</update>

	<delete id="delete" parameterType="int">
		delete from sms_std
		where
		std_id = #{no}
	</delete>



	<select id="countAll" resultType="int" parameterType="map">
		select count(*) from sms_std
		<where>
			rate >= #{rateValue}
			<if test="size != 0">
				and
				<if test="size == 2">
					LEFT(cls_lms,2) = #{clsNo}
				</if>
				<if test="size == 4">
					LEFT(cls_lms,4) = #{clsNo}
				</if>
				<if test="size == 6">
					cls_lms = #{clsNo}
				</if>
			</if>

			<if test="dayNoListSize > 0">
				and (
				<foreach collection="dayNoList" item="d"
					separator="or">
					day = #{d}
				</foreach>
				)
			</if>

			<if test="addressSize != 0">
				and
				<if test="addressSize == 2">
					LEFT(adr_lms,2) = #{addressNo}
				</if>
				<if test="addressSize == 4">
					LEFT(adr_lms,4) = #{addressNo}
				</if>
				<if test="addressSize == 6">
					adr_lms = #{addressNo}
				</if>
			</if>

			<if test="keyword != null">
				<bind name="pattern1" value="'%' + keyword + '%'" />
				and (
				name like #{pattern1}
				or goal like #{pattern1}
				or cont like
				#{pattern1}
				<if test="findedClsNosByKeyword != null">
					or
					<foreach collection="findedClsNosByKeyword" item="k"
						separator="or">
						cls_lms = #{k}
					</foreach>
				</if>
				)
			</if>
		</where>

	</select>



	<select id="countAllByKeyword" resultType="int"
		parameterType="map">
		select count(*) from sms_std
		<where>
			rate >= #{rateValue}
			<if test="clsNo != null">
				and (
				<foreach collection="clsNo" item="c" separator="or">
					IF (
					LENGTH(#{c}) = 2, LEFT(cls_lms,2) = #{c}, LEFT(cls_lms,4) =
					#{c})
				</foreach>
				)
			</if>
			
			 <if test="dayNoListSize > 0">
        and (
        <foreach collection="dayNoList" item="d"
          separator="or">
          day = #{d}
        </foreach>
        )
      </if>

			<if test="addressSize != 0">
				and
				<if test="addressSize == 2">
					LEFT(adr_lms,2) = #{addressNo}
				</if>
				<if test="addressSize == 4">
					LEFT(adr_lms,4) = #{addressNo}
				</if>
				<if test="addressSize == 6">
					adr_lms = #{addressNo}
				</if>
			</if>

			<if test="keyword != null">
				<bind name="pattern1" value="'%' + keyword + '%'" />
				and (
				name like #{pattern1}
				or goal like #{pattern1}
				or cont like
				#{pattern1}
				<if test="findedClsNosByKeyword != null">
					or
					<foreach collection="findedClsNosByKeyword" item="k"
						separator="or">
						cls_lms = #{k}
					</foreach>
				</if>
				)
			</if>
		</where>

	</select>

	<!-- 스터디 사진 조회 -->
	<select id="findByStudy" resultMap="studyMap"
		parameterType="int">
		select
		photo
		from
		sms_std
		where
		std_id = #{value}
	</select>

	<select id="findPickedStudyByUser" resultMap="studyMap"
		parameterType="int">
		select
		s.std_id,
		s.adr_lms,
		s.cls_lms,
		s.name,
		s.photo,
		s.day,
		s.sdt,
		s.edt,
		s.rcrtm_state,
		s.goal,
		s.cont,
		s.prsn,
		s.rate
		from
		sms_pick_std p
		inner join sms_std s on p.std_id = s.std_id
		where
		member_id = #{value}
	</select>

</mapper>










